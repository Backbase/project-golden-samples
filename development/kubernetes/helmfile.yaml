environments:
  default:
    kubeContext: colima
    values:
      - ingress:
          proto: http
          host: kubernetes.docker.internal

repositories:
  - name: istio
    url: https://istio-release.storage.googleapis.com/charts
  - name: ueslei
    url: https://ueslei.dev/helm-charts/

{{- $identityHost := "backbase-identity:8080" }}
releases:
  # Istio
  - name: istiod
    chart: istio/istiod
    version: 1.16.2
    namespace: istio-system
    labels:
      tier: istio
    dependencies:
      - chart: istio/base
        version: 1.16.2
        alias: istio
    values:
      - global:
          enabled: true
        pilot:
          traceSampling: 100

  # Ingress Controller
  - name: istio-ingressgateway
    chart: istio/gateway
    version: 1.16.2
    namespace: istio-system
    labels:
      tier: istio
      component: gateway

  # Jaeger for Tracing
  - name: jaeger
    chart: ueslei/jaeger
    version: 0.5.0
    namespace: istio-system
    labels:
      tier: monitoring
      component: jaeger
    values:
      - ingress:
          enabled: true
          path: /jaeger
          pathType: Prefix
          host: {{ .Values.ingress.host }}
          annotations:
            kubernetes.io/ingress.class: "istio"

  # Spring Boot Admin for Monitoring
  {{- $adminServerPath := "/admin" }}
  - name: spring-boot-admin
    chart: backbase-charts/backbase-app
    version: 0.24.2
    labels:
      tier: monitoring
      component: sba-server
    values:
      - app:
          name: spring-boot-admin-server
          image:
            registry: backbasecs
            repository: spring-boot-admin-server
            tag: latest
            pullPolicy: Always
        service:
          nameOverride: spring-boot-admin-server
        env:
          # Configuration for non-spring boot health check (Identity)
          SPRING_CLOUD_KUBERNETES_DISCOVERY_FILTER: "metadata.labels != null && metadata.labels['app.backbase.com/tier'] != null && metadata.labels['app.kubernetes.io/name'] != 'backbaseidentity'"
          SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_IDENTITY-SERVER_0_URI: http://{{ $identityHost }}
          SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_IDENTITY-SERVER_0_METADATA_MANAGEMENT_CONTEXT-PATH: /auth/q/health
          SPRING_CLOUD_DISCOVERY_CLIENT_SIMPLE_INSTANCES_IDENTITY-SERVER_0_METADATA_HEALTH_PATH: live
          # Pre-configuration for nginx-ingress
          SPRING_BOOT_ADMIN_UI_PUBLIC_URL: {{ .Values.ingress.proto }}://{{ .Values.ingress.host }}{{ $adminServerPath }}
          SPRING_BOOT_ADMIN_CONTEXT_PATH: {{ $adminServerPath }}
        ingress:
          enabled: true
          annotations:
            "kubernetes.io/ingress.class": "istio"
          hosts:
            - host: {{ .Values.ingress.host }}
              customPaths:
                - path: {{ $adminServerPath }}
                  pathType: Prefix
                  backend:
                    service:
                      name: spring-boot-admin-server
                      port:
                        number: 8080

  # Environment Initial Setup
  - name: backbase-env
    chart: backbase-charts/backbase-env
    version: 0.5.62
    labels:
      tier: infrastructure
      component: env
    values:
      - activemq:
          enabled: true
          image:
            repository: symptoma/activemq
            tag: 5.17.3
        mysql:
          enabled: true
          image: mysql
          imageTag: 8.0.31
          mysqlRootPassword: backbase321!
          mysqlPassword: backbase123!
        jwt:
          enabled: true
          internalSecretKey: "JWTSecretKeyDontUseInProduction!"
          externalSecretKey: "JWTSecretKeyDontUseInProduction!"
          externalEncSecretKey: "JWTEncKeyDontUseInProduction666!"
          userctxKey: "JWTSecretKeyDontUseInProduction!"

  # Edge
  - name: foundation-edge
    chart: backbase-charts/edge
    version: 0.12.5
    labels:
      tier: foundation
      component: edge
    values:
      - global.yaml.gotmpl
      - global-ssdk.yaml.gotmpl
      - edge:
          env:
            GATEWAY_ACTUATOR_SECURITY_ENABLED: "false"
            GATEWAY_CSRF_ENABLED: "false"
          javaOpts:
            extra:
              - "-Dreactor.netty.http.server.accessLogEnabled=true"
              - "-Dlogging.level.reactor.netty.http.server.AccessLog=DEBUG"
          readinessProbe:
            enabled: false
          ingress:
            enabled: true
            annotations:
              "kubernetes.io/ingress.class": "istio"
            hosts:
              - host: {{ .Values.ingress.host }}
                customPaths:
                  - path: /api
                    pathType: Prefix
                    backend:
                      service:
                        name: edge
                        port:
                          number: 8080

  # Identity Authorization Server
  - name: identity-server
    chart: backbase-charts/backbase-identity
    version: 0.3.5
    labels:
      tier: identity
      component: identity-server
      with-database: true
    values:
      - global.yaml.gotmpl
      - backbaseidentity:
          liquibase:
            enabled: true
          database:
            sid: backbase_identity
          service:
            nameOverride: backbase-identity
          env:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
            keycloak.hostname.default.frontendUrl: {{ .Values.ingress.proto }}://{{ .Values.ingress.host }}/auth
            QUARKUS_HTTP_PROXY_PROXY_ADDRESS_FORWARDING: "true"
            QUARKUS_JAEGER_PROPAGATION: b3
            QUARKUS_JAEGER_SERVICE_NAME: backbase-identity
            QUARKUS_JAEGER_ENDPOINT: "http://jaeger-collector.istio-system:14268/api/traces"
            QUARKUS_JAEGER_SAMPLER_TYPE: const
            QUARKUS_JAEGER_SAMPLER_PARAM: "1.0"
            QUARKUS_LOG_LEVEL: INFO
            QUARKUS_LOG_CONSOLE_FORMAT: "%d{yyy:MM:dd HH:mm:ss.SSS} %-5p [${quarkus.jaeger.service-name},%X{traceId},%X{spanId},%X{sampled}] %i --- %c{2.} : %m%n"
          javaOpts:
            extra:
              - "--add-opens=java.base/java.lang=ALL-UNNAMED"
              - "-Dquarkus.log.category.'\"com.backbase\"'.level=DEBUG"
              - "-Dquarkus.log.category.'\"org.keycloak.protocol.oidc\"'.level=TRACE"
              - "-Dkeycloak.profile.feature.upload_scripts=enabled"
              - "-Dkeycloak.import=/home/nonroot/conf/backbase-realm.json"
          customFiles:
            backbase-realm.json: |-
              {{- readFile "../config/identity/backbase-realm.json" | nindent 14 }}
          readinessProbe:
            enabled: false
          ingress:
            enabled: true
            annotations:
              "kubernetes.io/ingress.class": "istio"
            hosts:
              - host: {{ .Values.ingress.host }}
                customPaths:
                  - path: /auth
                    pathType: Prefix
                    backend:
                      service:
                        name: backbase-identity
                        port:
                          number: 8080

  # Token Converter
  - name: identity-token-converter
    chart: backbase-charts/oidc-token-converter
    version: 0.3.2
    labels:
      tier: identity
      component: token-converter
    values:
      - global.yaml.gotmpl
      - global-ssdk.yaml.gotmpl
      - oidctokenconverter:
          env:
            BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_0_INTERNALHOSTSCHEME: http
            BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_0_INTERNALHOST: {{ $identityHost }}
            BACKBASE_OIDCTOKENCONVERTER_WHITELISTEDDOMAINS_0_ISSUERHOST: {{ .Values.ingress.host }}

  # Identity Integration Service
  - name: identity-integration
    chart: backbase-charts/identity-integration
    version: 0.1.9
    labels:
      tier: identity
      component: identity-integration
    values:
      - global.yaml.gotmpl
      - global-ssdk.yaml.gotmpl
      - identityintegrationservice:
          env:
            IDENTITY_SERVERURL: http://{{ $identityHost }}/auth
            IDENTITY_MASTERADMIN_USERNAME: admin
            IDENTITY_MASTERADMIN_PASSWORD: admin
            IDENTITY_REALMCONFIGURATION_FALLBACKOPTIONS_ENABLEUSER: "true"
            IDENTITY_REALMCONFIGURATION_FALLBACKOPTIONS_USETEMPORARYPASSWORD: "true"

  # Access Control
  - name: dbs-access-control
    chart: backbase-charts/access-control
    version: 0.2.0
    labels:
      tier: dbs
      capability: access-control
      with-database: true
    values:
      - global.yaml.gotmpl
      - global-ssdk.yaml.gotmpl
      - accesscontrol:
          liquibase:
            enabled: true

  # Arrangement Manager
  - name: dbs-arrangement-manager
    chart: backbase-charts/arrangement-manager
    version: 0.3.0
    labels:
      tier: dbs
      capability: arrangement-manager
      with-database: true
    values:
      - global.yaml.gotmpl
      - global-ssdk.yaml.gotmpl
      - arrangement-manager:
          liquibase:
            enabled: true
          database:
            checkEnabled: true
          activemq:
            checkEnabled: true

  # User Manager
  - name: dbs-user-manager
    chart: backbase-charts/user-manager
    version: 0.2.0
    labels:
      tier: dbs
      capability: user-manager
      with-database: true
    values:
      - global.yaml.gotmpl
      - global-ssdk.yaml.gotmpl
      - usermanager:
          liquibase:
            enabled: true
          database:
            sid: user_pandp
          env:
            BACKBASE_USERS_IDENTITYENDPOINTSENABLED: "true"
            BACKBASE_USERS_IDENTITYINTEGRATIONENABLED: "true"
            BACKBASE_USERS_SYNCPRIMARYTOIDENTITYENABLED: "true"

  # Bootstrap Task
  - name: stream-legal-entity-boostrap
    chart: oci://repo.backbase.com/backbase-stream-images/stream-bootstrap-task
    version: 1.0.0
    labels:
      tier: job
      component: bootstrap-task
    values:
      - image:
          repository: legal-entity-bootstrap-task
          tag: 3.32.0
          pullPolicy: IfNotPresent
        imagePullSecrets:
          - name: backbase-registry
        dependencies:
          - serviceName: token-converter
          - serviceName: access-control
          - serviceName: user-manager
          - serviceName: arrangement-manager
          - serviceName: identity-integration-service
          - serviceName: backbase-identity
            path: /auth/realms/backbase/.well-known/openid-configuration
            healthIndicator: backbase
        initContainers:
          - name: init-product-catalog
            image: repo.backbase.com/backbase-stream-images/product-catalog-task:3.32.0
            imagePullSecrets:
              - name: backbase-registry
            env:
              - name: JAVA_TOOL_OPTIONS
                value: "-XX:MaxRAMPercentage=50.0 -Dspring.cloud.config.enabled=false -Dlogging.level.com.backbase.stream=DEBUG"
              - name: SPRING_PROFILES_INCLUDE
                value: "moustache-bank"
              - name: EUREKA_CLIENT_ENABLED
                value: "false"
              - name: SPRING_CLOUD_KUBERNETES_ENABLED
                value: "true"
              - name: SPRING_ZIPKIN_ENABLED
                value: "true"
              - name: SPRING_ZIPKIN_BASE_URL
                value: "http://zipkin.istio-system:9411/"
              - name: SPRING_SLEUTH_SAMPLER_PROBABILITY
                value: "1.0"
        env:
          JAVA_TOOL_OPTIONS: -XX:MaxRAMPercentage=50.0 -Dspring.cloud.config.enabled=false -Dlogging.level.com.backbase.stream=DEBUG
          SPRING_PROFILES_INCLUDE: moustache-bank,moustache-bank-subsidiaries
          EUREKA_CLIENT_ENABLED: "false"
          SPRING_CLOUD_KUBERNETES_ENABLED: "true"
          SPRING_ZIPKIN_ENABLED: "true"
          SPRING_ZIPKIN_BASE_URL: "http://zipkin.istio-system:9411/"
          SPRING_SLEUTH_SAMPLER_PROBABILITY: "1.0"

  # Web
  # Employee Web Portal
  - name: web-employee-app
    chart: oci://repo.backbase.com/docker-test/portalless
    version: 2022.05.6-ingress
    labels:
      tier: web
      capability: employee-app
    values:
      - image:
          repository: harbor.backbase.eu/development/employee-web-app-essentials
          tag: "2023.02-LTS"
          pullPolicy: IfNotPresent
        imagePullSecrets:
          - name: harbor-registry
        priorityClassName: ''
        replicaCount: 1
        env:
          API_ROOT: "{{ .Values.ingress.proto }}://{{ .Values.ingress.host }}/api/"
          AUTH_URL: "{{ .Values.ingress.proto }}://{{ .Values.ingress.host }}/auth/"
          BASE_DOMAIN: {{ .Values.ingress.host }}
          PROTOCOL: {{ .Values.ingress.proto }}
        livenessProbe:
          initialDelaySeconds: 15
        ingress:
          enabled: true
          annotations:
            "kubernetes.io/ingress.class": "istio"
          hosts:
            - host: {{ .Values.ingress.host }}
              paths:
                - path: /
                  pathType: Prefix
